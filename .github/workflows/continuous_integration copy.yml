name: Continuous Integration on Pull Request
on:
  pull_request:
    branches: [staging, main]
  push:
    branches: [staging, main]

env:
  CARGO_TERM_COLOR: always

jobs:
  Audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  Test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11.12
        env:
          POSTGRES_PASSWORD: db_password
          POSTGRES_USER: root
          POSTGRES_DB: billing
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      kafka:
        image: confluentinc/cp-kafka:7.0.0
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        ports:
          - 9092:9092
    env:
      APP_NAME: auth-plus-billling
      PORT: 3000
      RUST_ENV: test
      DATABASE_HOST: localhost
      DATABASE_USER: root
      DATABASE_PASSWORD: db_password
      DATABASE_DATABASE: billing
      DATABASE_PORT: 5432
      KAFKA_HOST: 5432
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Running migrations
        run: HOST=localhost make migration/up
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
