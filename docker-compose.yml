version: '3.9'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: deploy
    ports:
      - '5002:5002'
    command: tail -f /dev/null
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    networks:
      - host
    depends_on:
      - database

  database:
    container_name: postgres
    image: postgres:11.12
    restart: always
    environment:
      POSTGRES_PASSWORD: db_password
      POSTGRES_USER: root
      POSTGRES_DB: billing
    ports:
      - '5432:5432'
    volumes:
      - v-database:/var/lib/postgres
    networks:
      - host

  database-migration:
    container_name: dbmate
    image: amacneil/dbmate
    volumes:
      - ./db:/db
    depends_on:
      - database
    networks:
      - host

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.0
    networks:
      - host
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.0
    networks:
      - host
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafdrop:
    container_name: kafdrop
    restart: always
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - host
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

networks:
  host:
    driver: bridge

volumes:
  v-database: